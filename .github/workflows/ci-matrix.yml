name: ci-matrix

on:
  pull_request:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHON_KEYRING_BACKEND: "keyring.backends.null.Keyring"

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install detect-secrets trufflehog
      - name: Format & Lint
        run: |
          black --check .
          ruff check .
      - name: Security checks
        run: |
          bandit -r reconscript
          pip-audit --requirement requirements.txt
      - name: Run unit tests with coverage
        run: pytest -m "not integration" --maxfail=1 --ff --cov=reconscript --cov-report=xml --cov-report=term
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true
      - name: Secret scanning
        run: |
          detect-secrets scan --all-files
          trufflehog filesystem --no-update --fail .

  integration:
    runs-on: ubuntu-latest
    needs: build-test
    environment: integration
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.integration == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run integration tests
        env:
          INTEGRATION_SCANME: ${{ secrets.INTEGRATION_SCANME || 'false' }}
        run: pytest -m integration --maxfail=1 --ff
